{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "East US 2",
      "allowedValues": [
        "Brazil South",
        "Central US",
        "East Aisa",
        "East US",
        "East US 2",
        "Japan East",
        "Japan West",
        "North Central US",
        "North Europe",
        "South Central US",
        "Southeast Aisa",
        "West Europe",
        "West US"
      ],
      "metadata": {
        "description": "The data center you want to install this WAF into."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username used to login with."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password used to login with."
      }
    },
    "stackPrefix": {
      "type": "string",
      "defaultValue": "myVM",
      "metadata": {
        "description": "Prefix used for naming all objects in the stack."
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "16.04.0-LTS",
      "metadata": {
        "description": "Image SKU, can be found via powershell or CLI."
      }
    }
  },
  "variables": {
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',concat(parameters('stackPrefix'),'-vnet'))]",
    "subnetRefMGMT": "[concat(variables('vnetID'),'/subnets/','mgmt')]",
    "subnetRefData": "[concat(variables('vnetID'),'/subnets/','data')]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('stackPrefix'), '-pip'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(parameters('stackPrefix'),'-store')]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[concat(parameters('stackPrefix'),'-vnet')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "VirtualNetwork"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.10.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "mgmt",
            "properties": {
              "addressPrefix": "10.10.0.0/24"
            }
          },
          {
            "name": "data",
            "properties": {
              "addressPrefix": "10.10.1.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[concat(parameters('stackPrefix'),'-avset')]",
      "tags": {
        "displayName": "AVSet"
      },
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "properties": { }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('stackPrefix'),'-pip', copyIndex())]",
      "tags": {
        "displayName": "PublicIP"
      },
      "copy": {
        "count": 2,
        "name": "pipLoop"
      },
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('stackPrefix'), copyIndex())]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat(parameters('stackPrefix'),'-nsg')]",
      "tags": {
        "displayName": "NetworkSecurityGateway"
      },
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssl_rule",
            "properties": {
              "description": "",
              "priority": 101,
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443",
              "protocol": "Tcp",
              "direction": "Inbound",
              "access": "Allow"
            }
          },
          {
            "name": "http_rule",
            "properties": {
              "description": "",
              "priority": 102,
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "80",
              "protocol": "Tcp",
              "direction": "Inbound",
              "access": "Allow"
            }
          },
          {
            "name": "ssh_rule",
            "properties": {
              "description": "",
              "priority": 103,
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22",
              "protocol": "Tcp",
              "direction": "Inbound",
              "access": "Allow"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('stackPrefix'), '-mgtnic' ,copyindex())]",
      "tags": {
        "displayName": "MGMTNIC"
      },
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicLoop",
        "count": 2
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('stackPrefix'),'-nsg')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', concat(parameters('stackPrefix'),'-nsg'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "publicIPAddress": {
                "id": "[concat(variables('publicIPAddressID'), copyIndex())]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRefMGMT')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('stackPrefix'), '-datanicd' ,copyindex())]",
      "tags": {
        "displayName": "DataNIC"
      },
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicLoop",
        "count": 2
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('stackPrefix'),'-nsg')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', concat(parameters('stackPrefix'),'-nsg'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRefData')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('stackPrefix'), '-controller')]",
      "tags": {
        "displayName": "Controller VM"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', concat(parameters('stackPrefix'), '-store'))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(parameters('stackPrefix'), '-mgtnic', 0))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(parameters('stackPrefix'), '-datanic', 0))]",
        "[concat('Microsoft.Compute/availabilitySets/', concat(parameters('stackPrefix'), '-avset'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',concat(parameters('stackPrefix'), '-avset'))]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_D5_v2"
        },
        "osProfile": {
          "computerName": "[concat(parameters('stackPrefix'), '-controller')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('stackPrefix'),'-store','.blob.core.windows.net/vhds/','osdisk', '-controller', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('stackPrefix'), '-mgtnic0'))]"
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('stackPrefix'), '-datanic0'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',parameters('stackPrefix'), '-store','.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('stackPrefix'), '-compute')]",
      "tags": {
        "displayName": "Compute VM"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', concat(parameters('stackPrefix'), '-store'))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(parameters('stackPrefix'), '-mgtnic', 1))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(parameters('stackPrefix'), '-datanic', 1))]",
        "[concat('Microsoft.Compute/availabilitySets/', concat(parameters('stackPrefix'), '-avset'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',concat(parameters('stackPrefix'), '-avset'))]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_D5_v2"
        },
        "osProfile": {
          "computerName": "[concat(parameters('stackPrefix'), '-compute')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('stackPrefix'),'-store','.blob.core.windows.net/vhds/','osdisk', '-compute', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('stackPrefix'), '-mgtnic1'))]"
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('stackPrefix'), '-datanic2'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',parameters('stackPrefix'), '-store','.blob.core.windows.net')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "GUI-URL": {
      "type": "string",
      "value": "[concat('https://',reference(variables('publicIPAddressID')).dnsSettings.fqdn,':8443',' Increment Port number for additional BIG-IP Devices.')]"
    },
    "SSH-URL": {
      "type": "string",
      "value": "[concat(reference(variables('publicIPAddressID')).dnsSettings.fqdn,' ',8022,' Increment Port number for additional BIG-IP Devices.')]"
    },
    "Documentation": {
      "type": "string",
      "value": "To configure these BIG-IP devices into a Device Service Cluster, please see the following documentation.  https://support.f5.com/kb/en-us/products/big-ip_ltm/manuals/product/bigip-device-service-clustering-admin-12-0-0.html?sr=50978566"
    }
  }
}
